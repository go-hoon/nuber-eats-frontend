[{"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/login.tsx":"1","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx":"2","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/reportWebVitals.ts":"3","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurant.tsx":"4","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurants.tsx":"5","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/edit-profile.tsx":"6","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/create-account.tsx":"7","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-restaurant.tsx":"8","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/404.tsx":"9","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/fragments.ts":"10","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/search.tsx":"11","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/header.tsx":"12","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/index.tsx":"13","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/hooks/useMe.tsx":"14","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-dish.tsx":"15","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/category.tsx":"16","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/confirm-email.tsx":"17","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx":"18","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/dish.tsx":"19"},{"size":3825,"mtime":1611651337465,"results":"20","hashOfConfig":"21"},{"size":3964,"mtime":1613501312132,"results":"22","hashOfConfig":"21"},{"size":425,"mtime":1610869518626,"results":"23","hashOfConfig":"21"},{"size":1882,"mtime":1613501773801,"results":"24","hashOfConfig":"21"},{"size":4269,"mtime":1611513196340,"results":"25","hashOfConfig":"21"},{"size":2823,"mtime":1611305840475,"results":"26","hashOfConfig":"21"},{"size":4456,"mtime":1612750133494,"results":"27","hashOfConfig":"21"},{"size":4268,"mtime":1613071047769,"results":"28","hashOfConfig":"21"},{"size":627,"mtime":1611305779685,"results":"29","hashOfConfig":"21"},{"size":688,"mtime":1613385150582,"results":"30","hashOfConfig":"21"},{"size":1320,"mtime":1611512259408,"results":"31","hashOfConfig":"21"},{"size":1096,"mtime":1611259995827,"results":"32","hashOfConfig":"21"},{"size":558,"mtime":1611565812157,"results":"33","hashOfConfig":"21"},{"size":286,"mtime":1611570035112,"results":"34","hashOfConfig":"21"},{"size":4636,"mtime":1613382865952,"results":"35","hashOfConfig":"21"},{"size":898,"mtime":1611513681933,"results":"36","hashOfConfig":"21"},{"size":1702,"mtime":1611305820683,"results":"37","hashOfConfig":"21"},{"size":2098,"mtime":1612867231778,"results":"38","hashOfConfig":"21"},{"size":1093,"mtime":1613502075613,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"142ld9v",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/login.tsx",["85","86"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/reportWebVitals.ts",[],["87","88"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurant.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurants.tsx",["89"],"import { gql, useQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Restaurant } from \"../../components/restaurant\";\nimport { CATEGORY_FRAGMENT, RESTAURANTS_FRAGMENT } from \"../../fragments\";\nimport {\n  restaurantsPageQuery,\n  restaurantsPageQueryVariables,\n} from \"../../__generated/restaurantsPageQuery\";\n\nconst RESTAURANTS_QUERY = gql`\n  query restaurantsPageQuery($input: RestaurantsInput!) {\n    allCategories {\n      ok\n      error\n      categories {\n        ...CategoryParts\n      }\n    }\n    restaurants(input: $input) {\n      ok\n      error\n      totalPages\n      totalResults\n      results {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANTS_FRAGMENT}\n  ${CATEGORY_FRAGMENT}\n`;\n\ninterface IFormProps {\n  searchTerm: string;\n}\n\nexport const Restaurants = () => {\n  const [page, setPage] = useState(1);\n\n  const { data, loading, error } = useQuery<\n    restaurantsPageQuery,\n    restaurantsPageQueryVariables\n  >(RESTAURANTS_QUERY, { variables: { input: { page } } });\n\n  const onNextPageClick = () => setPage(page + 1);\n  const onPrevPageClick = () => setPage(page - 1);\n\n  const { register, handleSubmit, getValues } = useForm<IFormProps>();\n  const history = useHistory();\n  const onSearchSubmit = () => {\n    const { searchTerm } = getValues();\n    history.push({\n      pathname: \"/search\",\n      search: `term=${searchTerm}`,\n    });\n  };\n\n  return (\n    <div>\n      <Helmet>\n        <title>Home | Nuber Eats</title>\n      </Helmet>\n      <form\n        className=\"bg-gray-800 w-full py-40 flex items-center justify-center\"\n        onSubmit={handleSubmit(onSearchSubmit)}\n      >\n        <input\n          ref={register({ required: true, minLength: 3 })}\n          name=\"searchTerm\"\n          type=\"Search\"\n          placeholder=\"Search Restaurants...\"\n          className=\"input rounded-md border-0 md:w-4/12 w-3/4\"\n        />\n      </form>\n      {!loading && (\n        <div className=\"max-w-screen-xl mx-auto mt-8 px-5 pb-20 xl:px-0\">\n          <div className=\"flex justify-center mx-auto overflow-x-auto\">\n            {data?.allCategories.categories?.map((category) => (\n              <Link to={`/category/${category.slug}`}>\n                <div\n                  key={category.id}\n                  className=\"flex flex-col items-center mx-4 lg:mx-8 group\"\n                >\n                  <div\n                    className=\"w-14 h-14 rounded-full bg-cover group-hover:bg-gray-200 cursor-pointer\"\n                    style={{ backgroundImage: `url(${category.coverImg})` }}\n                  ></div>\n                  <span className=\"mt-1 text-sm flex flex-col items-center font-medium cursor-pointer\">\n                    {category.name}\n                  </span>\n                </div>\n              </Link>\n            ))}\n          </div>\n          <div className=\"grid mt-12 md:grid-cols-3 gap-x-5 gap-y-10\">\n            {data?.restaurants.results?.map((restaurant) => (\n              <Restaurant\n                key={restaurant.id}\n                id={restaurant.id + \"\"}\n                coverImg={restaurant.coverImg}\n                name={restaurant.name}\n                categoryName={restaurant.category?.name}\n              />\n            ))}\n          </div>\n          <div className=\"grid grid-cols-3 text-cneter max-w-md items-center mx-auto mt-10\">\n            {page > 1 ? (\n              <button\n                className=\"focus:outline-none font-medium text-2xl cursor-pointer\"\n                onClick={onPrevPageClick}\n              >\n                &larr;\n              </button>\n            ) : (\n              <div></div>\n            )}\n            <span className=\"text-center\">\n              Page {page} of {data?.restaurants.totalPages}\n            </span>\n            {page !== data?.restaurants.totalPages ? (\n              <button\n                className=\"focus:outline-none font-medium text-2xl cursor-pointer\"\n                onClick={onNextPageClick}\n              >\n                &rarr;\n              </button>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n",["90","91"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/edit-profile.tsx",["92","93","94"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/create-account.tsx",["95","96","97","98","99"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport nuberLogo from \"../images/logo.svg\";\nimport { Button } from \"../components/button\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserRole } from \"../__generated/globalTypes\";\nimport {\n  createAccountMutation,\n  createAccountMutationVariables,\n} from \"../__generated/createAccountMutation\";\nimport { isLoggedInVar } from \"../apollo\";\n\nexport const CREAT_ACCOUNT_MUTATION = gql`\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\n    createAccount(input: $createAccountInput) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface ICreateAccountForm {\n  email: string;\n  password: string;\n  role: UserRole;\n}\n\nexport const CreateAccount = () => {\n  const {\n    register,\n    getValues,\n    errors,\n    watch,\n    handleSubmit,\n    formState,\n  } = useForm<ICreateAccountForm>({\n    mode: \"onChange\",\n    defaultValues: { role: UserRole.Client },\n  });\n\n  const history = useHistory();\n  const onCompleted = (data: createAccountMutation) => {\n    const {\n      createAccount: { ok },\n    } = data;\n    if (ok) {\n      alert(\"Account is created! Login now!\");\n      history.push(\"/\");\n    }\n  };\n\n  const [\n    createAccountMutation,\n    { loading, data: createAccountMutationResult },\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\n    CREAT_ACCOUNT_MUTATION,\n    { onCompleted }\n  );\n\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password, role } = getValues();\n      createAccountMutation({\n        variables: {\n          createAccountInput: {\n            email,\n            password,\n            role,\n          },\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Create Account | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col items-center px-5\">\n        <img src={nuberLogo} alt=\"logo\" className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Let's get started\n        </h4>\n        <form\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            })}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input transition-colors\"\n          ></input>\n          {errors.email?.message ? (\n            <FormError errorMessage={errors.email.message} />\n          ) : null}\n          {errors.email?.type === \"pattern\" ? (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          ) : null}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          ></input>\n          {errors.password?.message ? (\n            <FormError errorMessage={errors.password?.message} />\n          ) : null}\n          {errors.password?.type === \"minLength\" && (\n            <FormError\n              errorMessage={\"Passwords should be more than 10 chars\"}\n            />\n          )}\n          <select\n            className=\"input\"\n            ref={register({ required: true })}\n            name=\"role\"\n          >\n            {Object.keys(UserRole).map((role, i) => (\n              <option key={i}>{role}</option>\n            ))}\n          </select>\n          <Button\n            canClick={formState.isValid}\n            loading={false}\n            actionText=\"Create Account\"\n          />\n          {createAccountMutationResult?.createAccount.error ? (\n            <FormError\n              errorMessage={createAccountMutationResult?.createAccount.error}\n            />\n          ) : null}\n        </form>\n        <div>\n          Already have an account?{\" \"}\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\n            Login now\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-restaurant.tsx",["100","101","102"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"../../components/button\";\nimport { FormError } from \"../../components/form-error\";\nimport {\n  createRestaurant,\n  createRestaurantVariables,\n} from \"../../__generated/createRestaurant\";\nimport { MY_RESTAURANTS_QUERY } from \"./my-restaurants\";\n\nconst CREATE_RESTAURANT_MUTATION = gql`\n  mutation createRestaurant($input: CreateRestaurantInput!) {\n    createRestaurant(input: $input) {\n      ok\n      error\n      restaurantId\n    }\n  }\n`;\n\ninterface IFormProps {\n  name: string;\n  address: string;\n  categoryName: string;\n  file: FileList;\n}\n\nexport const AddRestaurant = () => {\n  const [imageUrl, setImageUrl] = useState(undefined);\n  const client = useApolloClient();\n  const history = useHistory();\n  const onCompleted = (data: createRestaurant) => {\n    const {\n      createRestaurant: { ok, error, restaurantId },\n    } = data;\n    if (ok) {\n      const { name, categoryName, address } = getValues();\n      setUploading(false);\n      const queryResult = client.readQuery({ query: MY_RESTAURANTS_QUERY });\n      client.writeQuery({\n        query: MY_RESTAURANTS_QUERY,\n        data: {\n          myRestaurants: {\n            ...queryResult.myRestaurants,\n            restaurants: [\n              {\n                address,\n                category: {\n                  name: categoryName,\n                  __typename: \"Category\",\n                },\n                coverImg: imageUrl,\n                id: restaurantId,\n                isPromoted: false,\n                name,\n                __typename: \"Restaurant\",\n              },\n              ...queryResult.myRestaurants.restaurants,\n            ],\n          },\n        },\n      });\n      history.push(\"/\");\n    }\n  };\n\n  const [createRestaurantMutaion, { data, loading }] = useMutation<\n    createRestaurant,\n    createRestaurantVariables\n  >(CREATE_RESTAURANT_MUTATION, {\n    onCompleted,\n    refetchQueries: [{ query: MY_RESTAURANTS_QUERY }],\n  });\n  const {\n    register,\n    getValues,\n    formState,\n    errors,\n    handleSubmit,\n  } = useForm<IFormProps>({ mode: \"onChange\" });\n  const [uploading, setUploading] = useState(false);\n\n  const onSubmit = async () => {\n    try {\n      setUploading(true);\n      const { address, name, categoryName, file } = getValues();\n      const actualFile = file[0];\n      const formBody = new FormData();\n      formBody.append(\"file\", actualFile);\n      const { url } = await (\n        await fetch(\"http://localhost:4000/uploads/\", {\n          method: \"POST\",\n          body: formBody,\n        })\n      ).json();\n      setImageUrl(url);\n      createRestaurantMutaion({\n        variables: { input: { address, name, categoryName, coverImg: url } },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <Helmet>\n        <title>Add Restaurant | Nuber Eats</title>\n      </Helmet>\n      <h1>Add Restaurant</h1>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          ref={register({ required: \"Name is required\" })}\n        ></input>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"address\"\n          placeholder=\"Address\"\n          ref={register({ required: \"Address is required\" })}\n        ></input>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"categoryName\"\n          placeholder=\"Category Name\"\n          ref={register({ required: \"Category name is required\" })}\n        ></input>\n        <div>\n          <input\n            type=\"file\"\n            name=\"file\"\n            accept=\"image/*\"\n            ref={register({ required: true })}\n          />\n        </div>\n        <Button\n          loading={uploading}\n          canClick={formState.isValid}\n          actionText=\"Create Restaurant\"\n        />\n        {data?.createRestaurant.error && (\n          <FormError errorMessage={data.createRestaurant.error} />\n        )}\n      </form>\n    </div>\n  );\n};\n",["103","104"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/404.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/fragments.ts",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/search.tsx",["105","106","107","108"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/header.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/index.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/hooks/useMe.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-dish.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/category.tsx",["109"],"import { gql, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CATEGORY_FRAGMENT, RESTAURANTS_FRAGMENT } from \"../../fragments\";\nimport { category, categoryVariables } from \"../../__generated/category\";\n\nconst CATEGORY_QUERY = gql`\n  query category($input: CategoryInput!) {\n    category(input: $input) {\n      ok\n      error\n      totalPages\n      restaurants {\n        ...RestaurantParts\n      }\n      category {\n        ...CategoryParts\n      }\n    }\n  }\n  ${RESTAURANTS_FRAGMENT}\n  ${CATEGORY_FRAGMENT}\n`;\n\ninterface ICategoryParams {\n  slug: string;\n}\n\nexport const Category = () => {\n  const { slug } = useParams<ICategoryParams>();\n  const { data, loading } = useQuery<category, categoryVariables>(\n    CATEGORY_QUERY,\n    { variables: { input: { page: 1, slug } } }\n  );\n  console.log(data);\n  return <h1>Category</h1>;\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/confirm-email.tsx",["110"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx",["111","112"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/dish.tsx",[],{"ruleId":"113","severity":1,"message":"114","line":94,"column":27,"nodeType":"115","messageId":"116","endLine":94,"endColumn":28,"suggestions":"117"},{"ruleId":"113","severity":1,"message":"114","line":94,"column":52,"nodeType":"115","messageId":"116","endLine":94,"endColumn":53,"suggestions":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":43,"column":26,"nodeType":"125","messageId":"126","endLine":43,"endColumn":31},{"ruleId":"119","replacedBy":"127"},{"ruleId":"121","replacedBy":"128"},{"ruleId":"123","severity":1,"message":"129","line":68,"column":34,"nodeType":"125","messageId":"126","endLine":68,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":85,"column":32,"nodeType":"115","messageId":"116","endLine":85,"endColumn":33,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"114","line":85,"column":57,"nodeType":"115","messageId":"116","endLine":85,"endColumn":58,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"132","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":21},{"ruleId":"123","severity":1,"message":"133","line":14,"column":10,"nodeType":"125","messageId":"126","endLine":14,"endColumn":23},{"ruleId":"123","severity":1,"message":"134","line":36,"column":5,"nodeType":"125","messageId":"126","endLine":36,"endColumn":10},{"ruleId":"113","severity":1,"message":"114","line":95,"column":34,"nodeType":"115","messageId":"116","endLine":95,"endColumn":35,"suggestions":"135"},{"ruleId":"113","severity":1,"message":"114","line":95,"column":59,"nodeType":"115","messageId":"116","endLine":95,"endColumn":60,"suggestions":"136"},{"ruleId":"123","severity":1,"message":"124","line":37,"column":31,"nodeType":"125","messageId":"126","endLine":37,"endColumn":36},{"ruleId":"123","severity":1,"message":"137","line":70,"column":43,"nodeType":"125","messageId":"126","endLine":70,"endColumn":50},{"ruleId":"123","severity":1,"message":"138","line":81,"column":5,"nodeType":"125","messageId":"126","endLine":81,"endColumn":11},{"ruleId":"119","replacedBy":"139"},{"ruleId":"121","replacedBy":"140"},{"ruleId":"123","severity":1,"message":"137","line":29,"column":23,"nodeType":"125","messageId":"126","endLine":29,"endColumn":30},{"ruleId":"123","severity":1,"message":"141","line":29,"column":38,"nodeType":"125","messageId":"126","endLine":29,"endColumn":44},{"ruleId":"123","severity":1,"message":"142","line":35,"column":12,"nodeType":"125","messageId":"126","endLine":35,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":47,"column":6,"nodeType":"145","endLine":47,"endColumn":25,"suggestions":"146"},{"ruleId":"123","severity":1,"message":"137","line":31,"column":17,"nodeType":"125","messageId":"126","endLine":31,"endColumn":24},{"ruleId":"123","severity":1,"message":"142","line":50,"column":12,"nodeType":"125","messageId":"126","endLine":50,"endColumn":13},{"ruleId":"123","severity":1,"message":"147","line":1,"column":15,"nodeType":"125","messageId":"126","endLine":1,"endColumn":30},{"ruleId":"123","severity":1,"message":"148","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["149","150"],["151","152"],"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["153"],["154"],"'data' is assigned a value but never used.",["155","156"],["157","158"],"'ApolloError' is defined but never used.","'isLoggedInVar' is defined but never used.","'watch' is assigned a value but never used.",["159","160"],["161","162"],"'loading' is assigned a value but never used.","'errors' is assigned a value but never used.",["153"],["154"],"'called' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["163"],"'useApolloClient' is defined but never used.","'useEffect' is defined but never used.",{"messageId":"164","fix":"165","desc":"166"},{"messageId":"167","fix":"168","desc":"169"},{"messageId":"164","fix":"170","desc":"166"},{"messageId":"167","fix":"171","desc":"169"},"no-global-assign","no-unsafe-negation",{"messageId":"164","fix":"172","desc":"166"},{"messageId":"167","fix":"173","desc":"169"},{"messageId":"164","fix":"174","desc":"166"},{"messageId":"167","fix":"175","desc":"169"},{"messageId":"164","fix":"176","desc":"166"},{"messageId":"167","fix":"177","desc":"169"},{"messageId":"164","fix":"178","desc":"166"},{"messageId":"167","fix":"179","desc":"169"},{"desc":"180","fix":"181"},"removeEscape",{"range":"182","text":"183"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"184","text":"185"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"186","text":"183"},{"range":"187","text":"185"},{"range":"188","text":"183"},{"range":"189","text":"185"},{"range":"190","text":"183"},{"range":"191","text":"185"},{"range":"192","text":"183"},{"range":"193","text":"185"},{"range":"194","text":"183"},{"range":"195","text":"185"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"196","text":"197"},[2402,2403],"",[2402,2402],"\\",[2427,2428],[2427,2427],[2221,2222],[2221,2221],[2246,2247],[2246,2246],[2535,2536],[2535,2535],[2560,2561],[2560,2560],[1146,1165],"[callQuery, history, location]"]