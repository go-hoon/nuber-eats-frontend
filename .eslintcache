[{"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/login.tsx":"1","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx":"2","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/reportWebVitals.ts":"3","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurant.tsx":"4","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurants.tsx":"5","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/edit-profile.tsx":"6","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/create-account.tsx":"7","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-restaurant.tsx":"8","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/404.tsx":"9","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/fragments.ts":"10","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/search.tsx":"11","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/header.tsx":"12","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/index.tsx":"13","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/hooks/useMe.tsx":"14","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-dish.tsx":"15","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/category.tsx":"16","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/confirm-email.tsx":"17","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx":"18","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/dish.tsx":"19","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/apollo.ts":"20","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/order.tsx":"21","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/routers/logged-in-router.tsx":"22","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/app.tsx":"23"},{"size":3825,"mtime":1611651337465,"results":"24","hashOfConfig":"25"},{"size":3964,"mtime":1613501312132,"results":"26","hashOfConfig":"25"},{"size":425,"mtime":1610869518626,"results":"27","hashOfConfig":"25"},{"size":6795,"mtime":1613640887237,"results":"28","hashOfConfig":"25"},{"size":4269,"mtime":1611513196340,"results":"29","hashOfConfig":"25"},{"size":2823,"mtime":1611305840475,"results":"30","hashOfConfig":"25"},{"size":4456,"mtime":1612750133494,"results":"31","hashOfConfig":"25"},{"size":4268,"mtime":1613071047769,"results":"32","hashOfConfig":"25"},{"size":627,"mtime":1611305779685,"results":"33","hashOfConfig":"25"},{"size":926,"mtime":1613641903290,"results":"34","hashOfConfig":"25"},{"size":1320,"mtime":1611512259408,"results":"35","hashOfConfig":"25"},{"size":1096,"mtime":1611259995827,"results":"36","hashOfConfig":"25"},{"size":558,"mtime":1611565812157,"results":"37","hashOfConfig":"25"},{"size":286,"mtime":1611570035112,"results":"38","hashOfConfig":"25"},{"size":4636,"mtime":1613382865952,"results":"39","hashOfConfig":"25"},{"size":898,"mtime":1611513681933,"results":"40","hashOfConfig":"25"},{"size":1702,"mtime":1611305820683,"results":"41","hashOfConfig":"25"},{"size":2098,"mtime":1612867231778,"results":"42","hashOfConfig":"25"},{"size":1528,"mtime":1613636954541,"results":"43","hashOfConfig":"25"},{"size":1545,"mtime":1613642490430,"results":"44","hashOfConfig":"25"},{"size":2599,"mtime":1613642187264,"results":"45","hashOfConfig":"25"},{"size":2604,"mtime":1613642297220,"results":"46","hashOfConfig":"25"},{"size":392,"mtime":1611565878391,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"142ld9v",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/login.tsx",["113","114"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport {\n  loginMutation,\n  loginMutationVariables,\n} from \"../__generated/loginMutation\";\nimport nuberLogo from \"../images/logo.svg\";\nimport { Button } from \"../components/button\";\nimport { Link } from \"react-router-dom\";\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\n\nexport const LOGIN_MUTATION = gql`\n  mutation loginMutation($loginInput: LoginInput!) {\n    login(input: $loginInput) {\n      ok\n      token\n      error\n    }\n  }\n`;\n\ninterface ILoginForm {\n  email: string;\n  password: string;\n}\n\nexport const Login = () => {\n  const {\n    register,\n    getValues,\n    errors,\n    handleSubmit,\n    formState,\n  } = useForm<ILoginForm>({ mode: \"onChange\" });\n\n  const onCompleted = (data: loginMutation) => {\n    if (data.login.ok) {\n      const {\n        login: { ok, token },\n      } = data;\n      if (ok && token) {\n        localStorage.setItem(LOCALSTORAGE_TOKEN, token);\n        authTokenVar(token);\n        isLoggedInVar(true);\n      }\n    }\n  };\n  const onError = (error: ApolloError) => {};\n\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\n    loginMutation,\n    loginMutationVariables\n  >(LOGIN_MUTATION, {\n    onCompleted,\n    onError,\n  });\n\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password } = getValues();\n      loginMutation({\n        variables: {\n          loginInput: {\n            email,\n            password,\n          },\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Login | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col items-center px-5\">\n        <img src={nuberLogo} alt=\"logo\" className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Welcome back\n        </h4>\n        <form\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: RegExp(\n                /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n              ),\n            })}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input transition-colors\"\n          ></input>\n          {errors.email?.message && (\n            <FormError errorMessage={errors.email.message} />\n          )}\n          {errors.email?.type === \"pattern\" && (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          )}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input mt-3\"\n          ></input>\n          {errors.password?.message && (\n            <FormError errorMessage={errors.password?.message} />\n          )}\n\n          <Button\n            canClick={formState.isValid}\n            loading={loading}\n            actionText=\"Login\"\n          />\n          {loginMutationResult?.login?.error && (\n            <FormError errorMessage={loginMutationResult.login.error} />\n          )}\n        </form>\n        <div>\n          New to Nuber?{\" \"}\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\n            Create an account\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n",["115","116"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx",[],["117","118"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/reportWebVitals.ts",[],["119","120"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurant.tsx",["121","122","123"],"import { gql, useMutation, useQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Dish } from \"../../components/dish\";\nimport { DishOption } from \"../../components/dish-option\";\nimport { DISH_FRAGMENT, RESTAURANTS_FRAGMENT } from \"../../fragments\";\nimport {\n  createOrder,\n  createOrderVariables,\n} from \"../../__generated/createOrder\";\nimport {\n  CreateOrderInput,\n  CreateOrderItemInput,\n} from \"../../__generated/globalTypes\";\nimport {\n  restaurant,\n  restaurantVariables,\n  restaurant_restaurant_restaurant_menu_options,\n} from \"../../__generated/restaurant\";\n\nconst RESTAURANT_QUERY = gql`\n  query restaurant($input: RestaurantInput!) {\n    restaurant(input: $input) {\n      ok\n      error\n      restaurant {\n        ...RestaurantParts\n        menu {\n          ...DishParts\n        }\n      }\n    }\n  }\n  ${RESTAURANTS_FRAGMENT}\n  ${DISH_FRAGMENT}\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($input: CreateOrderInput!) {\n    createOrder(input: $input) {\n      ok\n      error\n      orderId\n    }\n  }\n`;\n\nexport const Restaurant = () => {\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const { data } = useQuery<restaurant, restaurantVariables>(RESTAURANT_QUERY, {\n    variables: { input: { restaurantId: +id } },\n  });\n  const [orderStarted, setOrderStarted] = useState(false);\n  const [orderItems, setOrderItems] = useState<CreateOrderItemInput[]>([]);\n  const triggerStartOrder = () => {\n    setOrderStarted(true);\n  };\n  const addItemToOrder = (dishId: number) => {\n    if (orderItems.find((order) => order.dishId === dishId)) {\n      return;\n    }\n    setOrderItems((current) => [...current, { dishId, options: [] }]);\n  };\n  const getItem = (dishId: number) => {\n    return orderItems.find((order) => order.dishId === dishId);\n  };\n  const isSelected = (dishId: number) => {\n    return Boolean(getItem(dishId));\n  };\n  const removeFromOrder = (dishId: number) => {\n    setOrderItems((current) =>\n      current.filter((order) => order.dishId !== dishId)\n    );\n  };\n  const addOptionToItem = (dishId: number, optionName: string) => {\n    if (!isSelected(dishId)) {\n      return;\n    }\n    const oldItem = getItem(dishId);\n    if (oldItem) {\n      const hasOption = Boolean(\n        oldItem.options?.find((aOption) => aOption.name === optionName)\n      );\n      if (!hasOption) {\n        removeFromOrder(dishId);\n        setOrderItems((current) => [\n          { dishId, options: [{ name: optionName }, ...oldItem.options!] },\n          ...current,\n        ]);\n      }\n    }\n  };\n  const getOptionFromItem = (\n    item: CreateOrderItemInput,\n    optionName: string\n  ) => {\n    return item.options?.find((option) => option.name === optionName);\n  };\n  const isOptionSelected = (dishId: number, optionName: string) => {\n    const item = getItem(dishId);\n    if (item) {\n      return Boolean(getOptionFromItem(item, optionName));\n    }\n  };\n  const removeOptionFromItem = (dishId: number, optionName: string) => {\n    if (!isSelected(dishId)) {\n      return;\n    }\n    const oldItem = getItem(dishId);\n\n    if (oldItem) {\n      removeFromOrder(dishId);\n      setOrderItems((current) => [\n        {\n          dishId,\n          options: oldItem.options?.filter(\n            (option) => option.name !== optionName\n          ),\n        },\n        ...current,\n      ]);\n    }\n    return;\n  };\n  const triggerCancelOrder = () => {\n    setOrderStarted(false);\n    setOrderItems([]);\n  };\n  const onCompleted = (data: createOrder) => {\n    const {\n      createOrder: { ok, orderId },\n    } = data;\n    if (data.createOrder.ok) {\n      history.push(`/orders/${orderId}`);\n      alert(\"Order created\");\n    }\n  };\n  const [createOrderMutation, { loading: placingOrder }] = useMutation<\n    createOrder,\n    createOrderVariables\n  >(CREATE_ORDER_MUTATION, { onCompleted });\n  const triggerConfirmOrder = () => {\n    if (placingOrder) {\n      return;\n    }\n    if (orderItems.length === 0) {\n      alert(\"Can't place an empty order\");\n      return;\n    }\n    const ok = window.confirm(\"You are about to place an order\");\n    if (ok) {\n      createOrderMutation({\n        variables: { input: { restaurantId: +id, items: orderItems } },\n      });\n    }\n  };\n  console.log(orderItems);\n\n  return (\n    <div>\n      <div\n        className=\"bg-gray-800 py-40 bg-cover\"\n        style={{\n          backgroundImage: `url(${data?.restaurant.restaurant?.coverImg})`,\n        }}\n      >\n        <div className=\"bg-white w-3/12 pl-44 pr-6 py-4\">\n          <h4 className=\"text-4xl mb-3\">{data?.restaurant.restaurant?.name}</h4>\n          <h5 className=\"text-sm font-light\">\n            {data?.restaurant.restaurant?.category?.name}\n          </h5>\n          <h6 className=\"text-sm font-light\">\n            {data?.restaurant.restaurant?.address}\n          </h6>\n        </div>\n      </div>\n      <div className=\"container flex flex-col items-end\">\n        {!orderStarted && (\n          <button onClick={triggerStartOrder} className=\"btn px-12 mt-20\">\n            Start Order\n          </button>\n        )}\n        {orderStarted && (\n          <div className=\"flex items-center\">\n            <button\n              onClick={triggerConfirmOrder}\n              className=\"btn px-12 mt-20 mr-2\"\n            >\n              Confirm Order\n            </button>\n            <button\n              onClick={triggerCancelOrder}\n              className=\"btn px-12 mt-20 bg-black\"\n            >\n              Cancel Order\n            </button>\n          </div>\n        )}\n\n        <div className=\"w-full grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n          {data?.restaurant?.restaurant?.menu?.map((menu, index) => (\n            <Dish\n              isSelected={isSelected(menu.id)}\n              orderStarted={orderStarted}\n              key={index}\n              description={menu.description}\n              name={menu.name}\n              price={menu.price}\n              addItemToOrder={addItemToOrder}\n              removeFromOrder={removeFromOrder}\n              id={menu.id}\n              addOptionToItem={addOptionToItem}\n            >\n              <div>\n                <h5 className=\"mt-8 font-medium\">Options</h5>\n                {menu.options?.map((option, index) => (\n                  <DishOption\n                    key={index}\n                    isSelected={isOptionSelected(menu.id, option.name)}\n                    name={option.name}\n                    extra={option.extra}\n                    addOptionToItem={addOptionToItem}\n                    removeOptionFromItem={removeOptionFromItem}\n                    dishId={menu.id}\n                  />\n                ))}\n              </div>\n            </Dish>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurants.tsx",["124"],"import { gql, useQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Restaurant } from \"../../components/restaurant\";\nimport { CATEGORY_FRAGMENT, RESTAURANTS_FRAGMENT } from \"../../fragments\";\nimport {\n  restaurantsPageQuery,\n  restaurantsPageQueryVariables,\n} from \"../../__generated/restaurantsPageQuery\";\n\nconst RESTAURANTS_QUERY = gql`\n  query restaurantsPageQuery($input: RestaurantsInput!) {\n    allCategories {\n      ok\n      error\n      categories {\n        ...CategoryParts\n      }\n    }\n    restaurants(input: $input) {\n      ok\n      error\n      totalPages\n      totalResults\n      results {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANTS_FRAGMENT}\n  ${CATEGORY_FRAGMENT}\n`;\n\ninterface IFormProps {\n  searchTerm: string;\n}\n\nexport const Restaurants = () => {\n  const [page, setPage] = useState(1);\n\n  const { data, loading, error } = useQuery<\n    restaurantsPageQuery,\n    restaurantsPageQueryVariables\n  >(RESTAURANTS_QUERY, { variables: { input: { page } } });\n\n  const onNextPageClick = () => setPage(page + 1);\n  const onPrevPageClick = () => setPage(page - 1);\n\n  const { register, handleSubmit, getValues } = useForm<IFormProps>();\n  const history = useHistory();\n  const onSearchSubmit = () => {\n    const { searchTerm } = getValues();\n    history.push({\n      pathname: \"/search\",\n      search: `term=${searchTerm}`,\n    });\n  };\n\n  return (\n    <div>\n      <Helmet>\n        <title>Home | Nuber Eats</title>\n      </Helmet>\n      <form\n        className=\"bg-gray-800 w-full py-40 flex items-center justify-center\"\n        onSubmit={handleSubmit(onSearchSubmit)}\n      >\n        <input\n          ref={register({ required: true, minLength: 3 })}\n          name=\"searchTerm\"\n          type=\"Search\"\n          placeholder=\"Search Restaurants...\"\n          className=\"input rounded-md border-0 md:w-4/12 w-3/4\"\n        />\n      </form>\n      {!loading && (\n        <div className=\"max-w-screen-xl mx-auto mt-8 px-5 pb-20 xl:px-0\">\n          <div className=\"flex justify-center mx-auto overflow-x-auto\">\n            {data?.allCategories.categories?.map((category) => (\n              <Link to={`/category/${category.slug}`}>\n                <div\n                  key={category.id}\n                  className=\"flex flex-col items-center mx-4 lg:mx-8 group\"\n                >\n                  <div\n                    className=\"w-14 h-14 rounded-full bg-cover group-hover:bg-gray-200 cursor-pointer\"\n                    style={{ backgroundImage: `url(${category.coverImg})` }}\n                  ></div>\n                  <span className=\"mt-1 text-sm flex flex-col items-center font-medium cursor-pointer\">\n                    {category.name}\n                  </span>\n                </div>\n              </Link>\n            ))}\n          </div>\n          <div className=\"grid mt-12 md:grid-cols-3 gap-x-5 gap-y-10\">\n            {data?.restaurants.results?.map((restaurant) => (\n              <Restaurant\n                key={restaurant.id}\n                id={restaurant.id + \"\"}\n                coverImg={restaurant.coverImg}\n                name={restaurant.name}\n                categoryName={restaurant.category?.name}\n              />\n            ))}\n          </div>\n          <div className=\"grid grid-cols-3 text-cneter max-w-md items-center mx-auto mt-10\">\n            {page > 1 ? (\n              <button\n                className=\"focus:outline-none font-medium text-2xl cursor-pointer\"\n                onClick={onPrevPageClick}\n              >\n                &larr;\n              </button>\n            ) : (\n              <div></div>\n            )}\n            <span className=\"text-center\">\n              Page {page} of {data?.restaurants.totalPages}\n            </span>\n            {page !== data?.restaurants.totalPages ? (\n              <button\n                className=\"focus:outline-none font-medium text-2xl cursor-pointer\"\n                onClick={onNextPageClick}\n              >\n                &rarr;\n              </button>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n",["125","126"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/edit-profile.tsx",["127","128","129"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"../../components/button\";\nimport { useMe } from \"../../hooks/useMe\";\nimport {\n  editProfile,\n  editProfileVariables,\n} from \"../../__generated/editProfile\";\n\nconst EDIT_PROFIL_MUTATION = gql`\n  mutation editProfile($input: EditProfileInput!) {\n    editProfile(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface IForm {\n  email?: string;\n  password?: string;\n}\n\nexport const EditProfile = () => {\n  const { data: userData } = useMe();\n  const client = useApolloClient();\n  const onCompleted = (data: editProfile) => {\n    const {\n      editProfile: { ok },\n    } = data;\n    if (ok && userData) {\n      const {\n        me: { email: prevEmail, id },\n      } = userData;\n      const { email: newEmail } = getValues();\n      if (prevEmail !== newEmail) {\n        // update cache\n        client.writeFragment({\n          id: `User:${id}`,\n          fragment: gql`\n            fragment EditedUser on User {\n              verified\n              email\n            }\n          `,\n          data: {\n            verified: false,\n            email: newEmail,\n          },\n        });\n      }\n    }\n  };\n  const { register, handleSubmit, getValues, formState } = useForm<IForm>({\n    mode: \"onChange\",\n    defaultValues: { email: userData?.me.email },\n  });\n\n  const onSubmit = () => {\n    const { email, password } = getValues();\n    editProfile({\n      variables: { input: { email, ...(password !== \"\" && { password }) } },\n    });\n  };\n\n  const [editProfile, { loading, data }] = useMutation<\n    editProfile,\n    editProfileVariables\n  >(EDIT_PROFIL_MUTATION, { onCompleted });\n\n  return (\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\n      <Helmet>\n        <title>Edit Profile | Nuber Eats</title>\n      </Helmet>\n      <h4 className=\"font-medium text-xl tracking-wide\">Edit Profile</h4>\n      <form\n        className=\"grid gap-3 mt-5 max-w-screen-sm w-full mb-5\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <input\n          ref={register({\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n          })}\n          name=\"email\"\n          className=\"input\"\n          type=\"email\"\n          placeholder=\"Email\"\n        />\n        <input\n          ref={register}\n          name=\"password\"\n          className=\"input\"\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <Button\n          actionText=\"Update Profile\"\n          loading={loading}\n          canClick={formState.isValid}\n        />\n      </form>\n    </div>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/create-account.tsx",["130","131","132","133","134"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport nuberLogo from \"../images/logo.svg\";\nimport { Button } from \"../components/button\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserRole } from \"../__generated/globalTypes\";\nimport {\n  createAccountMutation,\n  createAccountMutationVariables,\n} from \"../__generated/createAccountMutation\";\nimport { isLoggedInVar } from \"../apollo\";\n\nexport const CREAT_ACCOUNT_MUTATION = gql`\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\n    createAccount(input: $createAccountInput) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface ICreateAccountForm {\n  email: string;\n  password: string;\n  role: UserRole;\n}\n\nexport const CreateAccount = () => {\n  const {\n    register,\n    getValues,\n    errors,\n    watch,\n    handleSubmit,\n    formState,\n  } = useForm<ICreateAccountForm>({\n    mode: \"onChange\",\n    defaultValues: { role: UserRole.Client },\n  });\n\n  const history = useHistory();\n  const onCompleted = (data: createAccountMutation) => {\n    const {\n      createAccount: { ok },\n    } = data;\n    if (ok) {\n      alert(\"Account is created! Login now!\");\n      history.push(\"/\");\n    }\n  };\n\n  const [\n    createAccountMutation,\n    { loading, data: createAccountMutationResult },\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\n    CREAT_ACCOUNT_MUTATION,\n    { onCompleted }\n  );\n\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password, role } = getValues();\n      createAccountMutation({\n        variables: {\n          createAccountInput: {\n            email,\n            password,\n            role,\n          },\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Create Account | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col items-center px-5\">\n        <img src={nuberLogo} alt=\"logo\" className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Let's get started\n        </h4>\n        <form\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            })}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input transition-colors\"\n          ></input>\n          {errors.email?.message ? (\n            <FormError errorMessage={errors.email.message} />\n          ) : null}\n          {errors.email?.type === \"pattern\" ? (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          ) : null}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          ></input>\n          {errors.password?.message ? (\n            <FormError errorMessage={errors.password?.message} />\n          ) : null}\n          {errors.password?.type === \"minLength\" && (\n            <FormError\n              errorMessage={\"Passwords should be more than 10 chars\"}\n            />\n          )}\n          <select\n            className=\"input\"\n            ref={register({ required: true })}\n            name=\"role\"\n          >\n            {Object.keys(UserRole).map((role, i) => (\n              <option key={i}>{role}</option>\n            ))}\n          </select>\n          <Button\n            canClick={formState.isValid}\n            loading={false}\n            actionText=\"Create Account\"\n          />\n          {createAccountMutationResult?.createAccount.error ? (\n            <FormError\n              errorMessage={createAccountMutationResult?.createAccount.error}\n            />\n          ) : null}\n        </form>\n        <div>\n          Already have an account?{\" \"}\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\n            Login now\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n",["135","136"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-restaurant.tsx",["137","138","139"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"../../components/button\";\nimport { FormError } from \"../../components/form-error\";\nimport {\n  createRestaurant,\n  createRestaurantVariables,\n} from \"../../__generated/createRestaurant\";\nimport { MY_RESTAURANTS_QUERY } from \"./my-restaurants\";\n\nconst CREATE_RESTAURANT_MUTATION = gql`\n  mutation createRestaurant($input: CreateRestaurantInput!) {\n    createRestaurant(input: $input) {\n      ok\n      error\n      restaurantId\n    }\n  }\n`;\n\ninterface IFormProps {\n  name: string;\n  address: string;\n  categoryName: string;\n  file: FileList;\n}\n\nexport const AddRestaurant = () => {\n  const [imageUrl, setImageUrl] = useState(undefined);\n  const client = useApolloClient();\n  const history = useHistory();\n  const onCompleted = (data: createRestaurant) => {\n    const {\n      createRestaurant: { ok, error, restaurantId },\n    } = data;\n    if (ok) {\n      const { name, categoryName, address } = getValues();\n      setUploading(false);\n      const queryResult = client.readQuery({ query: MY_RESTAURANTS_QUERY });\n      client.writeQuery({\n        query: MY_RESTAURANTS_QUERY,\n        data: {\n          myRestaurants: {\n            ...queryResult.myRestaurants,\n            restaurants: [\n              {\n                address,\n                category: {\n                  name: categoryName,\n                  __typename: \"Category\",\n                },\n                coverImg: imageUrl,\n                id: restaurantId,\n                isPromoted: false,\n                name,\n                __typename: \"Restaurant\",\n              },\n              ...queryResult.myRestaurants.restaurants,\n            ],\n          },\n        },\n      });\n      history.push(\"/\");\n    }\n  };\n\n  const [createRestaurantMutaion, { data, loading }] = useMutation<\n    createRestaurant,\n    createRestaurantVariables\n  >(CREATE_RESTAURANT_MUTATION, {\n    onCompleted,\n    refetchQueries: [{ query: MY_RESTAURANTS_QUERY }],\n  });\n  const {\n    register,\n    getValues,\n    formState,\n    errors,\n    handleSubmit,\n  } = useForm<IFormProps>({ mode: \"onChange\" });\n  const [uploading, setUploading] = useState(false);\n\n  const onSubmit = async () => {\n    try {\n      setUploading(true);\n      const { address, name, categoryName, file } = getValues();\n      const actualFile = file[0];\n      const formBody = new FormData();\n      formBody.append(\"file\", actualFile);\n      const { url } = await (\n        await fetch(\"http://localhost:4000/uploads/\", {\n          method: \"POST\",\n          body: formBody,\n        })\n      ).json();\n      setImageUrl(url);\n      createRestaurantMutaion({\n        variables: { input: { address, name, categoryName, coverImg: url } },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <Helmet>\n        <title>Add Restaurant | Nuber Eats</title>\n      </Helmet>\n      <h1>Add Restaurant</h1>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          ref={register({ required: \"Name is required\" })}\n        ></input>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"address\"\n          placeholder=\"Address\"\n          ref={register({ required: \"Address is required\" })}\n        ></input>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"categoryName\"\n          placeholder=\"Category Name\"\n          ref={register({ required: \"Category name is required\" })}\n        ></input>\n        <div>\n          <input\n            type=\"file\"\n            name=\"file\"\n            accept=\"image/*\"\n            ref={register({ required: true })}\n          />\n        </div>\n        <Button\n          loading={uploading}\n          canClick={formState.isValid}\n          actionText=\"Create Restaurant\"\n        />\n        {data?.createRestaurant.error && (\n          <FormError errorMessage={data.createRestaurant.error} />\n        )}\n      </form>\n    </div>\n  );\n};\n",["140","141"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/404.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/fragments.ts",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/search.tsx",["142","143","144","145"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RESTAURANTS_FRAGMENT } from \"../../fragments\";\nimport {\n  searchRestaurant,\n  searchRestaurantVariables,\n} from \"../../__generated/searchRestaurant\";\n\nconst SEARCH_RESTAURANT = gql`\n  query searchRestaurant($input: SearchRestaurantInput!) {\n    searchRestaurant(input: $input) {\n      ok\n      error\n      totalPages\n      totalResults\n      restaurants {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANTS_FRAGMENT}\n`;\n\nexport const Search = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [callQuery, { loading, data, called }] = useLazyQuery<\n    searchRestaurant,\n    searchRestaurantVariables\n  >(SEARCH_RESTAURANT);\n\n  useEffect(() => {\n    const [_, searchTerm] = location.search.split(\"?term=\");\n    if (!searchTerm) {\n      history.replace(\"/\");\n    }\n    callQuery({\n      variables: {\n        input: {\n          page: 1,\n          query: searchTerm,\n        },\n      },\n    });\n  }, [history, location]);\n  console.log(data);\n\n  return (\n    <h1>\n      <Helmet>\n        <title>Search | Nuber Eats</title>\n      </Helmet>\n      Search Page\n    </h1>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/header.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/index.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/hooks/useMe.tsx",[],["146","147"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-dish.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/category.tsx",["148"],"import { gql, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CATEGORY_FRAGMENT, RESTAURANTS_FRAGMENT } from \"../../fragments\";\nimport { category, categoryVariables } from \"../../__generated/category\";\n\nconst CATEGORY_QUERY = gql`\n  query category($input: CategoryInput!) {\n    category(input: $input) {\n      ok\n      error\n      totalPages\n      restaurants {\n        ...RestaurantParts\n      }\n      category {\n        ...CategoryParts\n      }\n    }\n  }\n  ${RESTAURANTS_FRAGMENT}\n  ${CATEGORY_FRAGMENT}\n`;\n\ninterface ICategoryParams {\n  slug: string;\n}\n\nexport const Category = () => {\n  const { slug } = useParams<ICategoryParams>();\n  const { data, loading } = useQuery<category, categoryVariables>(\n    CATEGORY_QUERY,\n    { variables: { input: { page: 1, slug } } }\n  );\n  console.log(data);\n  return <h1>Category</h1>;\n};\n",["149","150"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/confirm-email.tsx",["151"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMe } from \"../../hooks/useMe\";\nimport {\n  verifyEmail,\n  verifyEmailVariables,\n} from \"../../__generated/verifyEmail\";\n\nexport const VERIFY_EMAIL_MUTATION = gql`\n  mutation verifyEmail($input: VerifyEmailInput!) {\n    verifyEmail(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const ConfirmEmail = () => {\n  const { data: userData } = useMe();\n  const client = useApolloClient();\n  const history = useHistory();\n  const onCompleted = (data: verifyEmail) => {\n    const {\n      verifyEmail: { ok },\n    } = data;\n    if (ok && userData?.me) {\n      client.writeFragment({\n        id: `User:${userData.me.id}`,\n        fragment: gql`\n          fragment VerifiedUser on User {\n            verified\n          }\n        `,\n        data: {\n          verified: true,\n        },\n      });\n      history.push(\"/\");\n    }\n  };\n\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\n    VERIFY_EMAIL_MUTATION,\n    { onCompleted }\n  );\n\n  useEffect(() => {\n    const [_, code] = window.location.href.split(\"code=\");\n    verifyEmail({\n      variables: { input: { code } },\n    });\n    console.log(code);\n  });\n  return (\n    <div className=\"mt-20 h-screen flex flex-col items-center justify-center\">\n      <Helmet>\n        <title>Verify Email | Nuber Eats</title>\n      </Helmet>\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming Email...</h2>\n      <h4 className=\"text-gray-700 text-sm\">\n        Please wait, don't cloes this page\n      </h4>\n    </div>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx",["152","153"],"import { gql, useApolloClient, useQuery } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from \"react-router-dom\";\nimport { Restaurant } from \"../../components/restaurant\";\nimport { RESTAURANTS_FRAGMENT } from \"../../fragments\";\nimport { myRestaurants } from \"../../__generated/myRestaurants\";\n\nexport const MY_RESTAURANTS_QUERY = gql`\n  query myRestaurants {\n    myRestaurants {\n      ok\n      error\n      restaurants {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANTS_FRAGMENT}\n`;\n\nexport const MyRestaurants = () => {\n  const { data } = useQuery<myRestaurants>(MY_RESTAURANTS_QUERY);\n\n  //   useEffect(() => {\n  //     const queryResult = client.readQuery({ query: MY_RESTAURANTS_QUERY });\n  //     client.writeQuery({\n  //       query: MY_RESTAURANTS_QUERY,\n  //       data: {\n  //         myRestaurants: {\n  //           ...queryResult.myRestaurants,\n  //           restaurants: [{ name: \"fake guy\" }],\n  //         },\n  //       },\n  //     });\n  //   });\n  return (\n    <div>\n      <Helmet>\n        <title>My Restaurants | Nuber Eats</title>\n      </Helmet>\n      <div className=\"container mt-32\">\n        <h2 className=\"text-4xl font-medium mb-10\">My Restaurants</h2>\n        {data?.myRestaurants.ok && data.myRestaurants.restaurants === null ? (\n          <>\n            <h4 className=\"text-xl mb-5\">You have no restaurants.</h4>\n            <Link className=\"link\" to=\"/add-restaurant\">\n              Create one &rarr;\n            </Link>\n          </>\n        ) : (\n          <div>\n            <div className=\"grid mt-12 md:grid-cols-3 gap-x-5 gap-y-10\">\n              {data?.myRestaurants.restaurants?.map((restaurant) => (\n                <Restaurant\n                  key={restaurant.id}\n                  id={restaurant.id + \"\"}\n                  coverImg={restaurant.coverImg}\n                  name={restaurant.name}\n                  categoryName={restaurant.category?.name}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n",["154","155"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/dish.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/apollo.ts",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/order.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/routers/logged-in-router.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/app.tsx",[],{"ruleId":"156","severity":1,"message":"157","line":94,"column":27,"nodeType":"158","messageId":"159","endLine":94,"endColumn":28,"suggestions":"160"},{"ruleId":"156","severity":1,"message":"157","line":94,"column":52,"nodeType":"158","messageId":"159","endLine":94,"endColumn":53,"suggestions":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"164","replacedBy":"167"},{"ruleId":"162","replacedBy":"168"},{"ruleId":"164","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":12,"column":3,"nodeType":"172","messageId":"173","endLine":12,"endColumn":19},{"ruleId":"170","severity":1,"message":"174","line":18,"column":3,"nodeType":"172","messageId":"173","endLine":18,"endColumn":48},{"ruleId":"170","severity":1,"message":"175","line":132,"column":22,"nodeType":"172","messageId":"173","endLine":132,"endColumn":24},{"ruleId":"170","severity":1,"message":"176","line":43,"column":26,"nodeType":"172","messageId":"173","endLine":43,"endColumn":31},{"ruleId":"162","replacedBy":"177"},{"ruleId":"164","replacedBy":"178"},{"ruleId":"170","severity":1,"message":"179","line":68,"column":34,"nodeType":"172","messageId":"173","endLine":68,"endColumn":38},{"ruleId":"156","severity":1,"message":"157","line":85,"column":32,"nodeType":"158","messageId":"159","endLine":85,"endColumn":33,"suggestions":"180"},{"ruleId":"156","severity":1,"message":"157","line":85,"column":57,"nodeType":"158","messageId":"159","endLine":85,"endColumn":58,"suggestions":"181"},{"ruleId":"170","severity":1,"message":"182","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":21},{"ruleId":"170","severity":1,"message":"183","line":14,"column":10,"nodeType":"172","messageId":"173","endLine":14,"endColumn":23},{"ruleId":"170","severity":1,"message":"184","line":36,"column":5,"nodeType":"172","messageId":"173","endLine":36,"endColumn":10},{"ruleId":"156","severity":1,"message":"157","line":95,"column":34,"nodeType":"158","messageId":"159","endLine":95,"endColumn":35,"suggestions":"185"},{"ruleId":"156","severity":1,"message":"157","line":95,"column":59,"nodeType":"158","messageId":"159","endLine":95,"endColumn":60,"suggestions":"186"},{"ruleId":"162","replacedBy":"187"},{"ruleId":"164","replacedBy":"188"},{"ruleId":"170","severity":1,"message":"176","line":37,"column":31,"nodeType":"172","messageId":"173","endLine":37,"endColumn":36},{"ruleId":"170","severity":1,"message":"189","line":70,"column":43,"nodeType":"172","messageId":"173","endLine":70,"endColumn":50},{"ruleId":"170","severity":1,"message":"190","line":81,"column":5,"nodeType":"172","messageId":"173","endLine":81,"endColumn":11},{"ruleId":"162","replacedBy":"191"},{"ruleId":"164","replacedBy":"192"},{"ruleId":"170","severity":1,"message":"189","line":29,"column":23,"nodeType":"172","messageId":"173","endLine":29,"endColumn":30},{"ruleId":"170","severity":1,"message":"193","line":29,"column":38,"nodeType":"172","messageId":"173","endLine":29,"endColumn":44},{"ruleId":"170","severity":1,"message":"194","line":35,"column":12,"nodeType":"172","messageId":"173","endLine":35,"endColumn":13},{"ruleId":"195","severity":1,"message":"196","line":47,"column":6,"nodeType":"197","endLine":47,"endColumn":25,"suggestions":"198"},{"ruleId":"162","replacedBy":"199"},{"ruleId":"164","replacedBy":"200"},{"ruleId":"170","severity":1,"message":"189","line":31,"column":17,"nodeType":"172","messageId":"173","endLine":31,"endColumn":24},{"ruleId":"162","replacedBy":"201"},{"ruleId":"164","replacedBy":"202"},{"ruleId":"170","severity":1,"message":"194","line":50,"column":12,"nodeType":"172","messageId":"173","endLine":50,"endColumn":13},{"ruleId":"170","severity":1,"message":"203","line":1,"column":15,"nodeType":"172","messageId":"173","endLine":1,"endColumn":30},{"ruleId":"170","severity":1,"message":"204","line":2,"column":17,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"162","replacedBy":"205"},{"ruleId":"164","replacedBy":"206"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["207","208"],["209","210"],"no-native-reassign",["211"],"no-negated-in-lhs",["212"],["211"],["212"],["211"],["212"],"@typescript-eslint/no-unused-vars","'CreateOrderInput' is defined but never used.","Identifier","unusedVar","'restaurant_restaurant_restaurant_menu_options' is defined but never used.","'ok' is assigned a value but never used.","'error' is assigned a value but never used.",["211"],["212"],"'data' is assigned a value but never used.",["213","214"],["215","216"],"'ApolloError' is defined but never used.","'isLoggedInVar' is defined but never used.","'watch' is assigned a value but never used.",["217","218"],["219","220"],["211"],["212"],"'loading' is assigned a value but never used.","'errors' is assigned a value but never used.",["211"],["212"],"'called' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["221"],["211"],["212"],["211"],["212"],"'useApolloClient' is defined but never used.","'useEffect' is defined but never used.",["211"],["212"],{"messageId":"222","fix":"223","desc":"224"},{"messageId":"225","fix":"226","desc":"227"},{"messageId":"222","fix":"228","desc":"224"},{"messageId":"225","fix":"229","desc":"227"},"no-global-assign","no-unsafe-negation",{"messageId":"222","fix":"230","desc":"224"},{"messageId":"225","fix":"231","desc":"227"},{"messageId":"222","fix":"232","desc":"224"},{"messageId":"225","fix":"233","desc":"227"},{"messageId":"222","fix":"234","desc":"224"},{"messageId":"225","fix":"235","desc":"227"},{"messageId":"222","fix":"236","desc":"224"},{"messageId":"225","fix":"237","desc":"227"},{"desc":"238","fix":"239"},"removeEscape",{"range":"240","text":"241"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"242","text":"243"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"244","text":"241"},{"range":"245","text":"243"},{"range":"246","text":"241"},{"range":"247","text":"243"},{"range":"248","text":"241"},{"range":"249","text":"243"},{"range":"250","text":"241"},{"range":"251","text":"243"},{"range":"252","text":"241"},{"range":"253","text":"243"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"254","text":"255"},[2402,2403],"",[2402,2402],"\\",[2427,2428],[2427,2427],[2221,2222],[2221,2221],[2246,2247],[2246,2246],[2535,2536],[2535,2535],[2560,2561],[2560,2560],[1146,1165],"[callQuery, history, location]"]