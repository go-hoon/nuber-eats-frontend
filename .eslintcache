[{"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/create-account.tsx":"1","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/routers/logged-in-router.tsx":"2","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx":"3","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/index.tsx":"4","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurant.tsx":"5","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx":"6","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/404.tsx":"7","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurants.tsx":"8","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/login.tsx":"9","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/fragments.ts":"10","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/category.tsx":"11","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-restaurant.tsx":"12","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/hooks/useMe.tsx":"13","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-dish.tsx":"14","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/edit-profile.tsx":"15","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/header.tsx":"16"},{"size":4456,"mtime":1612750133494,"results":"17","hashOfConfig":"18"},{"size":2448,"mtime":1613380573426,"results":"19","hashOfConfig":"18"},{"size":1802,"mtime":1613380274705,"results":"20","hashOfConfig":"18"},{"size":558,"mtime":1611565812157,"results":"21","hashOfConfig":"18"},{"size":1388,"mtime":1611565122694,"results":"22","hashOfConfig":"18"},{"size":2098,"mtime":1612867231778,"results":"23","hashOfConfig":"18"},{"size":627,"mtime":1611305779685,"results":"24","hashOfConfig":"18"},{"size":4269,"mtime":1611513196340,"results":"25","hashOfConfig":"18"},{"size":3825,"mtime":1611651337465,"results":"26","hashOfConfig":"18"},{"size":580,"mtime":1613379050312,"results":"27","hashOfConfig":"18"},{"size":898,"mtime":1611513681933,"results":"28","hashOfConfig":"18"},{"size":4268,"mtime":1613071047769,"results":"29","hashOfConfig":"18"},{"size":286,"mtime":1611570035112,"results":"30","hashOfConfig":"18"},{"size":2549,"mtime":1613380569343,"results":"31","hashOfConfig":"18"},{"size":2823,"mtime":1611305840475,"results":"32","hashOfConfig":"18"},{"size":1096,"mtime":1611259995827,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"142ld9v",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/create-account.tsx",["72","73","74","75","76"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport nuberLogo from \"../images/logo.svg\";\nimport { Button } from \"../components/button\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserRole } from \"../__generated/globalTypes\";\nimport {\n  createAccountMutation,\n  createAccountMutationVariables,\n} from \"../__generated/createAccountMutation\";\nimport { isLoggedInVar } from \"../apollo\";\n\nexport const CREAT_ACCOUNT_MUTATION = gql`\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\n    createAccount(input: $createAccountInput) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface ICreateAccountForm {\n  email: string;\n  password: string;\n  role: UserRole;\n}\n\nexport const CreateAccount = () => {\n  const {\n    register,\n    getValues,\n    errors,\n    watch,\n    handleSubmit,\n    formState,\n  } = useForm<ICreateAccountForm>({\n    mode: \"onChange\",\n    defaultValues: { role: UserRole.Client },\n  });\n\n  const history = useHistory();\n  const onCompleted = (data: createAccountMutation) => {\n    const {\n      createAccount: { ok },\n    } = data;\n    if (ok) {\n      alert(\"Account is created! Login now!\");\n      history.push(\"/\");\n    }\n  };\n\n  const [\n    createAccountMutation,\n    { loading, data: createAccountMutationResult },\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\n    CREAT_ACCOUNT_MUTATION,\n    { onCompleted }\n  );\n\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password, role } = getValues();\n      createAccountMutation({\n        variables: {\n          createAccountInput: {\n            email,\n            password,\n            role,\n          },\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Create Account | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col items-center px-5\">\n        <img src={nuberLogo} alt=\"logo\" className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Let's get started\n        </h4>\n        <form\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            })}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input transition-colors\"\n          ></input>\n          {errors.email?.message ? (\n            <FormError errorMessage={errors.email.message} />\n          ) : null}\n          {errors.email?.type === \"pattern\" ? (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          ) : null}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          ></input>\n          {errors.password?.message ? (\n            <FormError errorMessage={errors.password?.message} />\n          ) : null}\n          {errors.password?.type === \"minLength\" && (\n            <FormError\n              errorMessage={\"Passwords should be more than 10 chars\"}\n            />\n          )}\n          <select\n            className=\"input\"\n            ref={register({ required: true })}\n            name=\"role\"\n          >\n            {Object.keys(UserRole).map((role, i) => (\n              <option key={i}>{role}</option>\n            ))}\n          </select>\n          <Button\n            canClick={formState.isValid}\n            loading={false}\n            actionText=\"Create Account\"\n          />\n          {createAccountMutationResult?.createAccount.error ? (\n            <FormError\n              errorMessage={createAccountMutationResult?.createAccount.error}\n            />\n          ) : null}\n        </form>\n        <div>\n          Already have an account?{\" \"}\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\n            Login now\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n",["77","78"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/routers/logged-in-router.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx",["79","80"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/index.tsx",[],["81","82"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurant.tsx",["83"],"import { gql, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { RESTAURANTS_FRAGMENT } from \"../../fragments\";\nimport { restaurant, restaurantVariables } from \"../../__generated/restaurant\";\n\nconst RESTAURANT_QUERY = gql`\n  query restaurant($input: RestaurantInput!) {\n    restaurant(input: $input) {\n      ok\n      error\n      restaurant {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANTS_FRAGMENT}\n`;\n\nexport const Restaurant = () => {\n  const { id } = useParams<{ id: string }>();\n  const { loading, data } = useQuery<restaurant, restaurantVariables>(\n    RESTAURANT_QUERY,\n    {\n      variables: { input: { restaurantId: +id } },\n    }\n  );\n  console.log(data?.restaurant.restaurant?.category);\n\n  return (\n    <div>\n      <div\n        className=\"bg-gray-800 py-40 bg-cover\"\n        style={{\n          backgroundImage: `url(${data?.restaurant.restaurant?.coverImg})`,\n        }}\n      >\n        <div className=\"bg-white w-3/12 pl-44 pr-6 py-4\">\n          <h4 className=\"text-4xl mb-3\">{data?.restaurant.restaurant?.name}</h4>\n          <h5 className=\"text-sm font-light\">\n            {data?.restaurant.restaurant?.category?.name}\n          </h5>\n          <h6 className=\"text-sm font-light\">\n            {data?.restaurant.restaurant?.address}\n          </h6>\n        </div>\n      </div>\n    </div>\n  );\n};\n",["84","85"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx",["86","87"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/404.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurants.tsx",["88"],"import { gql, useQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Restaurant } from \"../../components/restaurant\";\nimport { CATEGORY_FRAGMENT, RESTAURANTS_FRAGMENT } from \"../../fragments\";\nimport {\n  restaurantsPageQuery,\n  restaurantsPageQueryVariables,\n} from \"../../__generated/restaurantsPageQuery\";\n\nconst RESTAURANTS_QUERY = gql`\n  query restaurantsPageQuery($input: RestaurantsInput!) {\n    allCategories {\n      ok\n      error\n      categories {\n        ...CategoryParts\n      }\n    }\n    restaurants(input: $input) {\n      ok\n      error\n      totalPages\n      totalResults\n      results {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANTS_FRAGMENT}\n  ${CATEGORY_FRAGMENT}\n`;\n\ninterface IFormProps {\n  searchTerm: string;\n}\n\nexport const Restaurants = () => {\n  const [page, setPage] = useState(1);\n\n  const { data, loading, error } = useQuery<\n    restaurantsPageQuery,\n    restaurantsPageQueryVariables\n  >(RESTAURANTS_QUERY, { variables: { input: { page } } });\n\n  const onNextPageClick = () => setPage(page + 1);\n  const onPrevPageClick = () => setPage(page - 1);\n\n  const { register, handleSubmit, getValues } = useForm<IFormProps>();\n  const history = useHistory();\n  const onSearchSubmit = () => {\n    const { searchTerm } = getValues();\n    history.push({\n      pathname: \"/search\",\n      search: `term=${searchTerm}`,\n    });\n  };\n\n  return (\n    <div>\n      <Helmet>\n        <title>Home | Nuber Eats</title>\n      </Helmet>\n      <form\n        className=\"bg-gray-800 w-full py-40 flex items-center justify-center\"\n        onSubmit={handleSubmit(onSearchSubmit)}\n      >\n        <input\n          ref={register({ required: true, minLength: 3 })}\n          name=\"searchTerm\"\n          type=\"Search\"\n          placeholder=\"Search Restaurants...\"\n          className=\"input rounded-md border-0 md:w-4/12 w-3/4\"\n        />\n      </form>\n      {!loading && (\n        <div className=\"max-w-screen-xl mx-auto mt-8 px-5 pb-20 xl:px-0\">\n          <div className=\"flex justify-center mx-auto overflow-x-auto\">\n            {data?.allCategories.categories?.map((category) => (\n              <Link to={`/category/${category.slug}`}>\n                <div\n                  key={category.id}\n                  className=\"flex flex-col items-center mx-4 lg:mx-8 group\"\n                >\n                  <div\n                    className=\"w-14 h-14 rounded-full bg-cover group-hover:bg-gray-200 cursor-pointer\"\n                    style={{ backgroundImage: `url(${category.coverImg})` }}\n                  ></div>\n                  <span className=\"mt-1 text-sm flex flex-col items-center font-medium cursor-pointer\">\n                    {category.name}\n                  </span>\n                </div>\n              </Link>\n            ))}\n          </div>\n          <div className=\"grid mt-12 md:grid-cols-3 gap-x-5 gap-y-10\">\n            {data?.restaurants.results?.map((restaurant) => (\n              <Restaurant\n                key={restaurant.id}\n                id={restaurant.id + \"\"}\n                coverImg={restaurant.coverImg}\n                name={restaurant.name}\n                categoryName={restaurant.category?.name}\n              />\n            ))}\n          </div>\n          <div className=\"grid grid-cols-3 text-cneter max-w-md items-center mx-auto mt-10\">\n            {page > 1 ? (\n              <button\n                className=\"focus:outline-none font-medium text-2xl cursor-pointer\"\n                onClick={onPrevPageClick}\n              >\n                &larr;\n              </button>\n            ) : (\n              <div></div>\n            )}\n            <span className=\"text-center\">\n              Page {page} of {data?.restaurants.totalPages}\n            </span>\n            {page !== data?.restaurants.totalPages ? (\n              <button\n                className=\"focus:outline-none font-medium text-2xl cursor-pointer\"\n                onClick={onNextPageClick}\n              >\n                &rarr;\n              </button>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/login.tsx",["89","90"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/fragments.ts",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/category.tsx",["91"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-restaurant.tsx",["92","93","94"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/hooks/useMe.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/owner/add-dish.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/edit-profile.tsx",["95","96","97"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/header.tsx",[],{"ruleId":"98","severity":1,"message":"99","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":21},{"ruleId":"98","severity":1,"message":"102","line":14,"column":10,"nodeType":"100","messageId":"101","endLine":14,"endColumn":23},{"ruleId":"98","severity":1,"message":"103","line":36,"column":5,"nodeType":"100","messageId":"101","endLine":36,"endColumn":10},{"ruleId":"104","severity":1,"message":"105","line":95,"column":34,"nodeType":"106","messageId":"107","endLine":95,"endColumn":35,"suggestions":"108"},{"ruleId":"104","severity":1,"message":"105","line":95,"column":59,"nodeType":"106","messageId":"107","endLine":95,"endColumn":60,"suggestions":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"98","severity":1,"message":"114","line":33,"column":17,"nodeType":"100","messageId":"101","endLine":33,"endColumn":22},{"ruleId":"98","severity":1,"message":"115","line":33,"column":24,"nodeType":"100","messageId":"101","endLine":33,"endColumn":31},{"ruleId":"110","replacedBy":"116"},{"ruleId":"112","replacedBy":"117"},{"ruleId":"98","severity":1,"message":"115","line":22,"column":11,"nodeType":"100","messageId":"101","endLine":22,"endColumn":18},{"ruleId":"110","replacedBy":"118"},{"ruleId":"112","replacedBy":"119"},{"ruleId":"98","severity":1,"message":"120","line":1,"column":15,"nodeType":"100","messageId":"101","endLine":1,"endColumn":30},{"ruleId":"98","severity":1,"message":"121","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":26},{"ruleId":"98","severity":1,"message":"114","line":43,"column":26,"nodeType":"100","messageId":"101","endLine":43,"endColumn":31},{"ruleId":"104","severity":1,"message":"105","line":94,"column":27,"nodeType":"106","messageId":"107","endLine":94,"endColumn":28,"suggestions":"122"},{"ruleId":"104","severity":1,"message":"105","line":94,"column":52,"nodeType":"106","messageId":"107","endLine":94,"endColumn":53,"suggestions":"123"},{"ruleId":"98","severity":1,"message":"115","line":31,"column":17,"nodeType":"100","messageId":"101","endLine":31,"endColumn":24},{"ruleId":"98","severity":1,"message":"114","line":37,"column":31,"nodeType":"100","messageId":"101","endLine":37,"endColumn":36},{"ruleId":"98","severity":1,"message":"115","line":70,"column":43,"nodeType":"100","messageId":"101","endLine":70,"endColumn":50},{"ruleId":"98","severity":1,"message":"124","line":81,"column":5,"nodeType":"100","messageId":"101","endLine":81,"endColumn":11},{"ruleId":"98","severity":1,"message":"125","line":68,"column":34,"nodeType":"100","messageId":"101","endLine":68,"endColumn":38},{"ruleId":"104","severity":1,"message":"105","line":85,"column":32,"nodeType":"106","messageId":"107","endLine":85,"endColumn":33,"suggestions":"126"},{"ruleId":"104","severity":1,"message":"105","line":85,"column":57,"nodeType":"106","messageId":"107","endLine":85,"endColumn":58,"suggestions":"127"},"@typescript-eslint/no-unused-vars","'ApolloError' is defined but never used.","Identifier","unusedVar","'isLoggedInVar' is defined but never used.","'watch' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["128","129"],["130","131"],"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'error' is assigned a value but never used.","'loading' is assigned a value but never used.",["132"],["133"],["132"],["133"],"'useApolloClient' is defined but never used.","'useEffect' is defined but never used.",["134","135"],["136","137"],"'errors' is assigned a value but never used.","'data' is assigned a value but never used.",["138","139"],["140","141"],{"messageId":"142","fix":"143","desc":"144"},{"messageId":"145","fix":"146","desc":"147"},{"messageId":"142","fix":"148","desc":"144"},{"messageId":"145","fix":"149","desc":"147"},"no-global-assign","no-unsafe-negation",{"messageId":"142","fix":"150","desc":"144"},{"messageId":"145","fix":"151","desc":"147"},{"messageId":"142","fix":"152","desc":"144"},{"messageId":"145","fix":"153","desc":"147"},{"messageId":"142","fix":"154","desc":"144"},{"messageId":"145","fix":"155","desc":"147"},{"messageId":"142","fix":"156","desc":"144"},{"messageId":"145","fix":"157","desc":"147"},"removeEscape",{"range":"158","text":"159"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"160","text":"161"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"162","text":"159"},{"range":"163","text":"161"},{"range":"164","text":"159"},{"range":"165","text":"161"},{"range":"166","text":"159"},{"range":"167","text":"161"},{"range":"168","text":"159"},{"range":"169","text":"161"},{"range":"170","text":"159"},{"range":"171","text":"161"},[2535,2536],"",[2535,2535],"\\",[2560,2561],[2560,2560],[2402,2403],[2402,2402],[2427,2428],[2427,2427],[2221,2222],[2221,2221],[2246,2247],[2246,2246]]