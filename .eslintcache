[{"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/create-account.tsx":"1","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/confirm-email.tsx":"2","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/reportWebVitals.ts":"3","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/hooks/useMe.tsx":"4","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/login.tsx":"5","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/apollo.ts":"6","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/routers/logged-in-router.tsx":"7","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/header.tsx":"8","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/edit-profile.tsx":"9","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurants.tsx":"10","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/404.tsx":"11","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/App.tsx":"12","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/form-error.tsx":"13","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/restaurant.tsx":"14","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/routers/logged-out-router.tsx":"15","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/search.tsx":"16"},{"size":4449,"mtime":1611258220405,"results":"17","hashOfConfig":"18"},{"size":1702,"mtime":1611305820683,"results":"19","hashOfConfig":"18"},{"size":425,"mtime":1610869518626,"results":"20","hashOfConfig":"18"},{"size":279,"mtime":1611121893753,"results":"21","hashOfConfig":"18"},{"size":3992,"mtime":1611052674081,"results":"22","hashOfConfig":"18"},{"size":994,"mtime":1611256546986,"results":"23","hashOfConfig":"18"},{"size":1247,"mtime":1611434245188,"results":"24","hashOfConfig":"18"},{"size":1096,"mtime":1611259995827,"results":"25","hashOfConfig":"18"},{"size":2823,"mtime":1611305840475,"results":"26","hashOfConfig":"18"},{"size":4067,"mtime":1611434606356,"results":"27","hashOfConfig":"18"},{"size":627,"mtime":1611305779685,"results":"28","hashOfConfig":"18"},{"size":400,"mtime":1610909941439,"results":"29","hashOfConfig":"18"},{"size":235,"mtime":1610964651273,"results":"30","hashOfConfig":"18"},{"size":605,"mtime":1611432080080,"results":"31","hashOfConfig":"18"},{"size":571,"mtime":1611433827993,"results":"32","hashOfConfig":"18"},{"size":242,"mtime":1611434224882,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"142ld9v",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/create-account.tsx",["73","74","75","76","77"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport nuberLogo from \"../images/logo.svg\";\nimport { Button } from \"../components/button\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserRole } from \"../__generated/globalTypes\";\nimport {\n  createAccountMutation,\n  createAccountMutationVariables,\n} from \"../__generated/createAccountMutation\";\nimport { isLoggedInVar } from \"../apollo\";\n\nconst CREAT_ACCOUNT_MUTATION = gql`\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\n    createAccount(input: $createAccountInput) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface ICreateAccountForm {\n  email: string;\n  password: string;\n  role: UserRole;\n}\n\nexport const CreateAccount = () => {\n  const {\n    register,\n    getValues,\n    errors,\n    watch,\n    handleSubmit,\n    formState,\n  } = useForm<ICreateAccountForm>({\n    mode: \"onChange\",\n    defaultValues: { role: UserRole.Client },\n  });\n\n  const history = useHistory();\n  const onCompleted = (data: createAccountMutation) => {\n    const {\n      createAccount: { ok },\n    } = data;\n    if (ok) {\n      alert(\"Account is created! Login now!\");\n      history.push(\"/\");\n    }\n  };\n\n  const [\n    createAccountMutation,\n    { loading, data: createAccountMutationResult },\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\n    CREAT_ACCOUNT_MUTATION,\n    { onCompleted }\n  );\n\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password, role } = getValues();\n      createAccountMutation({\n        variables: {\n          createAccountInput: {\n            email,\n            password,\n            role,\n          },\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Create Account | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col items-center px-5\">\n        <img src={nuberLogo} alt=\"logo\" className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Let's get started\n        </h4>\n        <form\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            })}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input transition-colors\"\n          ></input>\n          {errors.email?.message ? (\n            <FormError errorMessage={errors.email.message} />\n          ) : null}\n          {errors.email?.type === \"pattern\" ? (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          ) : null}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          ></input>\n          {errors.password?.message ? (\n            <FormError errorMessage={errors.password?.message} />\n          ) : null}\n          {errors.password?.type === \"minLength\" && (\n            <FormError\n              errorMessage={\"Passwords should be more than 10 chars\"}\n            />\n          )}\n          <select\n            className=\"input\"\n            ref={register({ required: true })}\n            name=\"role\"\n          >\n            {Object.keys(UserRole).map((role, i) => (\n              <option key={i}>{role}</option>\n            ))}\n          </select>\n          <Button\n            canClick={formState.isValid}\n            loading={false}\n            actionText=\"Create Account\"\n          />\n          {createAccountMutationResult?.createAccount.error ? (\n            <FormError\n              errorMessage={createAccountMutationResult?.createAccount.error}\n            />\n          ) : null}\n        </form>\n        <div>\n          Already have an account?{\" \"}\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\n            Login now\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/confirm-email.tsx",["78"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMe } from \"../../hooks/useMe\";\nimport {\n  verifyEmail,\n  verifyEmailVariables,\n} from \"../../__generated/verifyEmail\";\n\nexport const VERIFY_EMAIL_MUTATION = gql`\n  mutation verifyEmail($input: VerifyEmailInput!) {\n    verifyEmail(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const ConfirmEmail = () => {\n  const { data: userData } = useMe();\n  const client = useApolloClient();\n  const history = useHistory();\n  const onCompleted = (data: verifyEmail) => {\n    const {\n      verifyEmail: { ok },\n    } = data;\n    if (ok && userData?.me) {\n      client.writeFragment({\n        id: `User:${userData.me.id}`,\n        fragment: gql`\n          fragment VerifiedUser on User {\n            verified\n          }\n        `,\n        data: {\n          verified: true,\n        },\n      });\n      history.push(\"/\");\n    }\n  };\n\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\n    VERIFY_EMAIL_MUTATION,\n    { onCompleted }\n  );\n\n  useEffect(() => {\n    const [_, code] = window.location.href.split(\"code=\");\n    verifyEmail({\n      variables: { input: { code } },\n    });\n    console.log(code);\n  });\n  return (\n    <div className=\"mt-20 h-screen flex flex-col items-center justify-center\">\n      <Helmet>\n        <title>Verify Email | Nuber Eats</title>\n      </Helmet>\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming Email...</h2>\n      <h4 className=\"text-gray-700 text-sm\">\n        Please wait, don't cloes this page\n      </h4>\n    </div>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/reportWebVitals.ts",[],["79","80"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/hooks/useMe.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/login.tsx",["81","82"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { FormError } from \"../components/form-error\";\nimport {\n  loginMutation,\n  loginMutationVariables,\n} from \"../__generated/loginMutation\";\nimport nuberLogo from \"../images/logo.svg\";\nimport { Button } from \"../components/button\";\nimport { Link } from \"react-router-dom\";\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\n\nconst LOGIN_MUTATION = gql`\n  mutation loginMutation($loginInput: LoginInput!) {\n    login(input: $loginInput) {\n      ok\n      token\n      error\n    }\n  }\n`;\n\ninterface ILoginForm {\n  email: string;\n  password: string;\n}\n\nexport const Login = () => {\n  const {\n    register,\n    getValues,\n    errors,\n    handleSubmit,\n    formState,\n  } = useForm<ILoginForm>({ mode: \"onChange\" });\n\n  const onCompleted = (data: loginMutation) => {\n    if (data.login.ok) {\n      const {\n        login: { ok, token },\n      } = data;\n      if (ok && token) {\n        localStorage.setItem(LOCALSTORAGE_TOKEN, token);\n        authTokenVar(token);\n        isLoggedInVar(true);\n      }\n    }\n  };\n  const onError = (error: ApolloError) => {};\n\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\n    loginMutation,\n    loginMutationVariables\n  >(LOGIN_MUTATION, {\n    onCompleted,\n    onError,\n  });\n\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password } = getValues();\n      loginMutation({\n        variables: {\n          loginInput: {\n            email,\n            password,\n          },\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\n      <Helmet>\n        <title>Login | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col items-center px-5\">\n        <img src={nuberLogo} alt=\"logo\" className=\"w-52 mb-10\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Welcome back\n        </h4>\n        <form\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: RegExp(\n                /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n              ),\n            })}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input transition-colors\"\n          ></input>\n          {errors.email?.message && (\n            <FormError errorMessage={errors.email.message} />\n          )}\n          {errors.email?.type === \"pattern\" && (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          )}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input mt-3\"\n          ></input>\n          {errors.password?.message && (\n            <FormError errorMessage={errors.password?.message} />\n          )}\n          {errors.password?.type === \"minLength\" && (\n            <FormError\n              errorMessage={\"Passwords should be more than 10 chars\"}\n            />\n          )}\n          <Button\n            canClick={formState.isValid}\n            loading={loading}\n            actionText=\"Login\"\n          />\n          {loginMutationResult?.login?.error && (\n            <FormError errorMessage={loginMutationResult.login.error} />\n          )}\n        </form>\n        <div>\n          New to Nuber?{\" \"}\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\n            Create an account\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/apollo.ts",[],["83","84"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/routers/logged-in-router.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/header.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/user/edit-profile.tsx",["85","86","87"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"../../components/button\";\nimport { useMe } from \"../../hooks/useMe\";\nimport {\n  editProfile,\n  editProfileVariables,\n} from \"../../__generated/editProfile\";\n\nconst EDIT_PROFIL_MUTATION = gql`\n  mutation editProfile($input: EditProfileInput!) {\n    editProfile(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface IForm {\n  email?: string;\n  password?: string;\n}\n\nexport const EditProfile = () => {\n  const { data: userData } = useMe();\n  const client = useApolloClient();\n  const onCompleted = (data: editProfile) => {\n    const {\n      editProfile: { ok },\n    } = data;\n    if (ok && userData) {\n      const {\n        me: { email: prevEmail, id },\n      } = userData;\n      const { email: newEmail } = getValues();\n      if (prevEmail !== newEmail) {\n        // update cache\n        client.writeFragment({\n          id: `User:${id}`,\n          fragment: gql`\n            fragment EditedUser on User {\n              verified\n              email\n            }\n          `,\n          data: {\n            verified: false,\n            email: newEmail,\n          },\n        });\n      }\n    }\n  };\n  const { register, handleSubmit, getValues, formState } = useForm<IForm>({\n    mode: \"onChange\",\n    defaultValues: { email: userData?.me.email },\n  });\n\n  const onSubmit = () => {\n    const { email, password } = getValues();\n    editProfile({\n      variables: { input: { email, ...(password !== \"\" && { password }) } },\n    });\n  };\n\n  const [editProfile, { loading, data }] = useMutation<\n    editProfile,\n    editProfileVariables\n  >(EDIT_PROFIL_MUTATION, { onCompleted });\n\n  return (\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\n      <Helmet>\n        <title>Edit Profile | Nuber Eats</title>\n      </Helmet>\n      <h4 className=\"font-medium text-xl tracking-wide\">Edit Profile</h4>\n      <form\n        className=\"grid gap-3 mt-5 max-w-screen-sm w-full mb-5\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <input\n          ref={register({\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n          })}\n          name=\"email\"\n          className=\"input\"\n          type=\"email\"\n          placeholder=\"Email\"\n        />\n        <input\n          ref={register}\n          name=\"password\"\n          className=\"input\"\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <Button\n          actionText=\"Update Profile\"\n          loading={loading}\n          canClick={formState.isValid}\n        />\n      </form>\n    </div>\n  );\n};\n","/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/restaurants.tsx",["88"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/404.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/App.tsx",[],["89","90"],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/form-error.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/components/restaurant.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/routers/logged-out-router.tsx",[],"/Users/jeahoonjung/Desktop/courses/nomadcoders/UberEats/nuber-eats-frontend/src/pages/client/search.tsx",[],{"ruleId":"91","severity":1,"message":"92","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":21},{"ruleId":"91","severity":1,"message":"95","line":14,"column":10,"nodeType":"93","messageId":"94","endLine":14,"endColumn":23},{"ruleId":"91","severity":1,"message":"96","line":36,"column":5,"nodeType":"93","messageId":"94","endLine":36,"endColumn":10},{"ruleId":"97","severity":1,"message":"98","line":95,"column":34,"nodeType":"99","messageId":"100","endLine":95,"endColumn":35,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"98","line":95,"column":59,"nodeType":"99","messageId":"100","endLine":95,"endColumn":60,"suggestions":"102"},{"ruleId":"91","severity":1,"message":"103","line":50,"column":12,"nodeType":"93","messageId":"94","endLine":50,"endColumn":13},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"97","severity":1,"message":"98","line":94,"column":27,"nodeType":"99","messageId":"100","endLine":94,"endColumn":28,"suggestions":"108"},{"ruleId":"97","severity":1,"message":"98","line":94,"column":52,"nodeType":"99","messageId":"100","endLine":94,"endColumn":53,"suggestions":"109"},{"ruleId":"104","replacedBy":"110"},{"ruleId":"106","replacedBy":"111"},{"ruleId":"91","severity":1,"message":"112","line":68,"column":34,"nodeType":"93","messageId":"94","endLine":68,"endColumn":38},{"ruleId":"97","severity":1,"message":"98","line":85,"column":32,"nodeType":"99","messageId":"100","endLine":85,"endColumn":33,"suggestions":"113"},{"ruleId":"97","severity":1,"message":"98","line":85,"column":57,"nodeType":"99","messageId":"100","endLine":85,"endColumn":58,"suggestions":"114"},{"ruleId":"91","severity":1,"message":"115","line":50,"column":26,"nodeType":"93","messageId":"94","endLine":50,"endColumn":31},{"ruleId":"104","replacedBy":"116"},{"ruleId":"106","replacedBy":"117"},"@typescript-eslint/no-unused-vars","'ApolloError' is defined but never used.","Identifier","unusedVar","'isLoggedInVar' is defined but never used.","'watch' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["118","119"],["120","121"],"'_' is assigned a value but never used.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],["124","125"],["126","127"],["122"],["123"],"'data' is assigned a value but never used.",["128","129"],["130","131"],"'error' is assigned a value but never used.",["122"],["123"],{"messageId":"132","fix":"133","desc":"134"},{"messageId":"135","fix":"136","desc":"137"},{"messageId":"132","fix":"138","desc":"134"},{"messageId":"135","fix":"139","desc":"137"},"no-global-assign","no-unsafe-negation",{"messageId":"132","fix":"140","desc":"134"},{"messageId":"135","fix":"141","desc":"137"},{"messageId":"132","fix":"142","desc":"134"},{"messageId":"135","fix":"143","desc":"137"},{"messageId":"132","fix":"144","desc":"134"},{"messageId":"135","fix":"145","desc":"137"},{"messageId":"132","fix":"146","desc":"134"},{"messageId":"135","fix":"147","desc":"137"},"removeEscape",{"range":"148","text":"149"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"150","text":"151"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"152","text":"149"},{"range":"153","text":"151"},{"range":"154","text":"149"},{"range":"155","text":"151"},{"range":"156","text":"149"},{"range":"157","text":"151"},{"range":"158","text":"149"},{"range":"159","text":"151"},{"range":"160","text":"149"},{"range":"161","text":"151"},[2528,2529],"",[2528,2528],"\\",[2553,2554],[2553,2553],[2395,2396],[2395,2395],[2420,2421],[2420,2420],[2221,2222],[2221,2221],[2246,2247],[2246,2246]]